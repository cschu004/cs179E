%{
#include <iostream>
#include <string>
#include "dirent.h"
#include "xmlcodegen.cpp"
using namespace std;

extern FILE *yyin;

table vartable;
row r;
int yylex(); 
int yyerror(const char *p) { cerr << "Error!" << endl; }
%}

%union { 
  char sym;
  char* val; 
};
%token<val> RELATIVELAYOUT TEXTVIEW BUTTON EDITTEXT XMLNS ANDROID TOOLS LAYOUTWIDTH LAYOUTHEIGHT CONTEXT ID LAYOUTALIGNPARENTRIGHT LAYOUTALIGNPARENTLEFT LAYOUTALIGNPARENTTOP LAYOUTALIGNPARENTBOTTOM LAYOUTMARGINRIGHT LAYOUTMARGINTOP LAYOUTMARGINBOTTOM TEXT LAYOUTBELOW LAYOUTMARGINLEFT ONCLICK LITERAL PADDINGBOTTOM PADDINGLEFT PADDINGRIGHT PADDINGTOP BACKGROUND LAYOUT_CENTERHORIZONTAL TEXTAPPEARANCE TEXTCOLOR INPUTTYPE LAYOUTABOVE LAYOUTCENTERVERTICAL
%token<sym> LANGLE RANGLE SLASH COLON EQUALS QUOTE NEWLINE

%type<val> widgets options1 options2 options3 XML JAVA

%%

start: XML | JAVA

XML: LANGLE RELATIVELAYOUT continue RANGLE end	{return 0;}
JAVA: LANGLE RANGLE	{cout << "JAVA!";}
continue:	|
			options1 COLON options2 EQUALS LITERAL continue 
options1:	XMLNS | ANDROID | TOOLS
options2:	ID| ANDROID | TOOLS | LAYOUTHEIGHT | LAYOUTWIDTH | CONTEXT | PADDINGBOTTOM | PADDINGLEFT | PADDINGRIGHT | PADDINGTOP | BACKGROUND | LAYOUT_CENTERHORIZONTAL | TEXTAPPEARANCE | TEXTCOLOR | INPUTTYPE | LAYOUTABOVE | LAYOUTCENTERVERTICAL
end:		LANGLE widgets {r.Type($2); } continue2 {vartable.insert(r); r.clear();} SLASH RANGLE end 
			| LANGLE SLASH RELATIVELAYOUT RANGLE
widgets:	TEXTVIEW	{$$ = $1;}	
			| BUTTON	{$$ = $1;}
			| EDITTEXT	{$$ = $1;}
continue2:	|
			ANDROID COLON options3 EQUALS LITERAL { string temp1 = strdup($3);
													string temp2 = strdup($5);
													if(temp1 == "id")
															r.Name(temp2);
													else if (temp1 == "layout_marginRight"){
															string y = temp2.substr(1,temp2.find("dp")-1);
															int x = atoi(y.c_str());
															r.X_coord(x);
															}
													else if (temp1 == "layout_marginLeft"){
															string y = temp2.substr(1,temp2.find("dp")-1);
															int x = atoi(y.c_str());
															r.X_coord(480 - x);
															}
													else if (temp1 == "layout_marginTop"){
															string y = temp2.substr(1,temp2.find("dp")-1);
															int x = atoi(y.c_str());
															r.Y_coord(640 - x);
															}
													else if (temp1 == "layout_marginBottom"){
															string y = temp2.substr(1,temp2.find("dp")-1);
															int x = atoi(y.c_str());
															r.Y_coord(x);
															}
													else if (temp1 == "text")
															r.Text(temp2);
													else if (temp1 == "onClick")
															r.Onclick(temp2);
													else if (temp1 == "layout_centerHorizontal" and temp2 == "\"true\"")
															r.X_coord(240);
													else if (temp1 == "layout_centerVertical" and temp2 == "\"true\"")
															r.Y_coord(320);
														} continue2
options3:	LAYOUTWIDTH					{$$ = $1;}
			| LAYOUTHEIGHT 				{$$ = $1;}
			| ID 						{$$ = $1;}
			| LAYOUTALIGNPARENTRIGHT 	{$$ = $1;}
			| LAYOUTALIGNPARENTLEFT 	{$$ = $1;}
			| LAYOUTALIGNPARENTTOP 		{$$ = $1;}
			| LAYOUTALIGNPARENTBOTTOM 	{$$ = $1;}
			| LAYOUTMARGINBOTTOM 		{$$ = $1;}
			| LAYOUTMARGINRIGHT 		{$$ = $1;}
			| LAYOUTMARGINTOP 			{$$ = $1;}
			| TEXT 						{$$ = $1;}
			| LAYOUTABOVE				{$$ = $1;}
			| LAYOUTBELOW 				{$$ = $1;}
			| LAYOUTMARGINLEFT 			{$$ = $1;}
			| ONCLICK					{$$ = $1;}
			| PADDINGBOTTOM				{$$ = $1;}
			| PADDINGLEFT 				{$$ = $1;}
			| PADDINGRIGHT 				{$$ = $1;}
			| PADDINGTOP				{$$ = $1;}
			| BACKGROUND				{$$ = $1;}
			| LAYOUT_CENTERHORIZONTAL	{$$ = $1;}
			| TEXTAPPEARANCE			{$$ = $1;}
			| TEXTCOLOR					{$$ = $1;}
			| INPUTTYPE					{$$ = $1;}
			| LAYOUTCENTERVERTICAL		{$$ = $1;}

%%

int main(int argc, char **argv){
		++argv; --argc;
		if(argc > 0){
			vector<string> xml;
			xml.push_back(argv[0]);
			vector<string> root = iterativeprint(xml);
			xml.clear();
			vector<string> java;
			cleanup( root, xml, java);
			for( int i = 0; i < xml.size(); i++){
				yyin = fopen(xml[i].c_str(), "r");
				yyparse();
				}
			vartable.print();
			}
		else{
			yyin = stdin;
			yyparse();
			}
		
}